name: 03-composition-via-ajax
on: workflow_dispatch
jobs:
  create-azure-resources:
    runs-on: ubuntu-latest
    steps:
    - name: Set Environment Variables
      run: |
        echo "LOCATION=westeurope" >> $GITHUB_ENV
        echo "RESOURCE_GROUP=rg-micro-frontends-in-action-03" >> $GITHUB_ENV
        echo "CONTAINER_REGISTRY=crmicrofrontendsinaction03" >> $GITHUB_ENV
        echo "CONTAINERAPPS_ENVIRONMENT=ca-env-micro-frontends-in-action-03" >> $GITHUB_ENV
      shell: bash
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Create Resource Group
      run: az group create -l ${LOCATION} -g ${RESOURCE_GROUP}
    - name: Create Container Registry
      run: az acr create -n ${CONTAINER_REGISTRY} -l ${LOCATION} -g ${RESOURCE_GROUP} --sku Basic --admin-enabled true
    - name: Create Container Apps Enviroment
      run: |
        az extension add --n containerapp --upgrade
        az containerapp env create -n ${CONTAINERAPPS_ENVIRONMENT} -l ${LOCATION} -g ${RESOURCE_GROUP}
    - name: Log Out From Azure
      run: |
        az logout
        az cache purge
        az account clear
  build-and-push-images:
    needs: [create-azure-resources]
    runs-on: ubuntu-latest
    steps:
    - name: Set Environment Variables
      run: |
        echo "CONTAINER_REGISTRY=crmicrofrontendsinaction03" >> $GITHUB_ENV
      shell: bash
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Log in to Container Registry
      run: az acr login -n ${CONTAINER_REGISTRY}
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build Docker Images
      run: |
        docker build 03-composition-via-ajax/Demo.AspNetCore.MicroFrontendsInAction.Decide/ -t ${CONTAINER_REGISTRY}.azurecr.io/decide:${{ github.sha }}
        docker build 03-composition-via-ajax/Demo.AspNetCore.MicroFrontendsInAction.Inspire/ -t ${CONTAINER_REGISTRY}.azurecr.io/inspire:${{ github.sha }}
    - name: Push Docker Images to Container Registry
      run: |
        docker push ${CONTAINER_REGISTRY}.azurecr.io/decide:${{ github.sha }}
        docker push ${CONTAINER_REGISTRY}.azurecr.io/inspire:${{ github.sha }}
    - name: Log Out From Azure
      run: |
        docker logout
        az logout
        az cache purge
        az account clear
  deploy-services:
    needs: [create-azure-resources, build-and-push-images]
    runs-on: ubuntu-latest
    steps:
    - name: Set Environment Variables
      run: |
        echo "RESOURCE_GROUP=rg-micro-frontends-in-action-03" >> $GITHUB_EN
        echo "CONTAINER_REGISTRY=crmicrofrontendsinaction03" >> $GITHUB_ENV
        echo "CONTAINERAPPS_ENVIRONMENT=ca-env-micro-frontends-in-action-03" >> $GITHUB_ENV
        echo "DECIDE_CONTAINERAPP=ca-app-decide" >> $GITHUB_ENV
        echo "INSPIRE_CONTAINERAPP=ca-app-inspire" >> $GITHUB_ENV
      shell: bash
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Log in to Container Registry
      run: az acr login -n ${CONTAINER_REGISTRY}
    - name: Deploy Services to Container Apps Enviroment
      run: |
        az extension add --n containerapp --upgrade
        az containerapp create -n ${DECIDE_CONTAINERAPP} -i ${CONTAINER_REGISTRY}.azurecr.io/decide:${{ github.sha }} -g ${RESOURCE_GROUP} --environment ${CONTAINERAPPS_ENVIRONMENT} --ingress external --target-port 3001 --registry-server ${CONTAINER_REGISTRY}.azurecr.io
        az containerapp create -n ${INSPIRE_CONTAINERAPP} -i ${CONTAINER_REGISTRY}.azurecr.io/inspire:${{ github.sha }} -g ${RESOURCE_GROUP} --environment ${CONTAINERAPPS_ENVIRONMENT} --ingress external --target-port 3002 --registry-server ${CONTAINER_REGISTRY}.azurecr.io
    - name: Get Services Ingress
      run: |
        echo 'DECIDE_CONTAINERAPP_INGRESS_JSON<<EOF' >> $GITHUB_ENV
        az containerapp ingress show -n ${DECIDE_CONTAINERAPP} -g ${RESOURCE_GROUP} >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
        echo 'INSPIRE_CONTAINERAPP_INGRESS_JSON<<EOF' >> $GITHUB_ENV
        az containerapp ingress show -n ${INSPIRE_CONTAINERAPP} -g ${RESOURCE_GROUP} >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
        echo ${fromJSON(DECIDE_CONTAINERAPP_INGRESS_JSON).fqdn}
        echo ${fromJSON(INSPIRE_CONTAINERAPP_INGRESS_JSON).fqdn}
      shell: bash